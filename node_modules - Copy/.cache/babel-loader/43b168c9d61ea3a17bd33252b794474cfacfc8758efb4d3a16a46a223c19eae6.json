{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.YASHIKA\\\\Downloads\\\\AccountingReact\\\\Project\\\\cseproject\\\\src\\\\Signup\\\\Signup.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport './Signup.css'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst SignUpPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const [passwordMatchError, setPasswordMatchError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ \r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  \r\n  const g=useNavigate();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if password and confirm password match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setPasswordMatchError('Password and Confirm Password do not match');\r\n      return;\r\n    }\r\n\r\n    // Reset password match error if previous error exists\r\n    setPasswordMatchError(null);\r\n\r\n    // Perform the actual signup logic here (e.g., send data to server)\r\n    g('/login');\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  // ...\r\n\r\nreturn (\r\n  <div className='parent'>\r\n    <form onSubmit={handleSubmit} className='big'>\r\n    <h2 style={{ fontFamily: 'Verdana, sans-serif', color: 'black', fontSize: '24px', marginBottom: '20px' }}>        \r\n     Sign Up\r\n        </h2>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={formData.firstName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={formData.lastName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      {passwordMatchError && <p style={{ color: 'red' }}>{passwordMatchError}</p>}\r\n      <button type=\"submit\" >Sign Up</button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default SignUpPage;*/\n\nimport React, { useState } from 'react';\nimport './Signup.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [passwordMatchError, setPasswordMatchError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if password and confirm password match\n    if (formData.password !== formData.confirmPassword) {\n      setPasswordMatchError('Password and Confirm Password do not match');\n      return;\n    }\n\n    // Reset password match error if previous error exists\n    setPasswordMatchError(null);\n    try {\n      // Perform the actual signup logic here (e.g., send data to server)\n      const response = await axios.post('', formData);\n      console.log('Server response:', response.data);\n\n      // Redirect to login page after successful signup\n      navigate('/login');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle error as needed\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"big\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontFamily: 'Verdana, sans-serif',\n          color: 'black',\n          fontSize: '24px',\n          marginBottom: '20px'\n        },\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          value: formData.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), passwordMatchError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordMatchError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpPage, \"eA0imrI/P5XM+zh8jz+pjozvkL4=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","SignUpPage","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","passwordMatchError","setPasswordMatchError","handleChange","e","target","name","value","navigate","handleSubmit","preventDefault","response","post","console","log","data","error","className","children","onSubmit","style","fontFamily","color","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/M.YASHIKA/Downloads/AccountingReact/Project/cseproject/src/Signup/Signup.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport './Signup.css'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst SignUpPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const [passwordMatchError, setPasswordMatchError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ \r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  \r\n  const g=useNavigate();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if password and confirm password match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setPasswordMatchError('Password and Confirm Password do not match');\r\n      return;\r\n    }\r\n\r\n    // Reset password match error if previous error exists\r\n    setPasswordMatchError(null);\r\n\r\n    // Perform the actual signup logic here (e.g., send data to server)\r\n    g('/login');\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  // ...\r\n\r\nreturn (\r\n  <div className='parent'>\r\n    <form onSubmit={handleSubmit} className='big'>\r\n    <h2 style={{ fontFamily: 'Verdana, sans-serif', color: 'black', fontSize: '24px', marginBottom: '20px' }}>        \r\n     Sign Up\r\n        </h2>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"First Name\"\r\n          value={formData.firstName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last Name\"\r\n          value={formData.lastName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      {passwordMatchError && <p style={{ color: 'red' }}>{passwordMatchError}</p>}\r\n      <button type=\"submit\" >Sign Up</button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default SignUpPage;*/\r\n\r\nimport React, { useState } from 'react';\r\nimport './Signup.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst SignUpPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const [passwordMatchError, setPasswordMatchError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if password and confirm password match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setPasswordMatchError('Password and Confirm Password do not match');\r\n      return;\r\n    }\r\n\r\n    // Reset password match error if previous error exists\r\n    setPasswordMatchError(null);\r\n\r\n    try {\r\n      // Perform the actual signup logic here (e.g., send data to server)\r\n      const response = await axios.post('', formData);\r\n\r\n      console.log('Server response:', response.data);\r\n\r\n      // Redirect to login page after successful signup\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='parent'>\r\n      <form onSubmit={handleSubmit} className='big'>\r\n        <h2 style={{ fontFamily: 'Verdana, sans-serif', color: 'black', fontSize: '24px', marginBottom: '20px' }}>\r\n          Sign Up\r\n        </h2>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        {/* ... other form inputs ... */}\r\n        {passwordMatchError && <p style={{ color: 'red' }}>{passwordMatchError}</p>}\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}